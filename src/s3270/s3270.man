'\" t
.TH S3270 1 "12 March 1999"
.SH NAME
s3270 \-
.SM IBM
host access tool
.SH SYNOPSIS
.B s3270
.RI [ options ]
.RI [[ prefix :]...[ LUname @] hostname [: port ]]
.SH DESCRIPTION
.B s3270
opens a telnet connection to an
.SM IBM
host, then allows a script to run the host login session.  It
is derived from
.IR x3270 ,
an X-windows IBM 3270 emulator.
.LP
Prepending a
.B p:
onto
.I hostname
causes the connection to go through the
.I telnet-passthru
service rather than directly to the host.
See PASSTHRU below.
.LP
Prepending an
.B s:
onto
.I hostname
removes the "extended data stream" option reported to the host.
See
.B \-tn
below for further information.
.LP
A specific LU name to use may be specified by prepending it to the
.I hostname
with an
.RB `` @ ''.
.LP
The port to connect to defaults to
.BR telnet .
This can be overridden with the
.RI \- port
option, or by appending a
.I port
to the
.I hostname
with a colon
.RB `` : ''.
(For compatability with previous versions of
.I x3270
and with
.IR tn3270 ,
the
.I port
may also be specified as a second, separate argument.)
.SH OPTIONS
.B s3270
understands the following options:
.TP
.B \-apl
Sets up
.SM APL
mode.
This is actually an abbreviation for several options.
See
.SM "APL SUPPORT"
below.
.TP
.BI \-charset " name"
Specifies an
.SM EBCDIC
national character set.
See
.SM CHARACTER SETS
below.
.TP
.BI \-clear " toggle"
Sets the initial value of
.I toggle
to
.B false.
The list of toggle names is under
.SM TOGGLES
below.
.TP
.BI \-model " name"
The model of 3270 display to be emulated.
The model name is in three parts, any of which may be omitted:
.IP
The first part is the
.BR "base model" ,
which is either
.B 3278
or
.BR 3279 .
.B 3278
specifies a monochrome 3270 display;
.B 3279
specifies a color 3270 display.
.IP
The second part is the
.BR "model number" ,
which specifies the number of rows and columns.
Model 4 is the default.
.PP
.RS
.TS
center;
c c c .
Model Number	Columns	Rows
_
2	80	24
3	80	30
4	80	43
5	132	27
.TE
.RE
.IP
Note: Technically, there is no such 3270 display as a 3279-4 or 3279-5, but
most hosts seem to work with them anyway.
.IP
The third part specifies the Extended 3270 Data Stream, and is given as
.B \-E.
It signals the host that the 3270 display is capable of displaying
extended field attributes, and supports structured fields and query replies.
A 3279 always uses the Extended Data Stream (whether or not
.B \-E
is specified); for a 3278 it is optional.
.IP
The default model is
.B 3279\-4\-E.
.TP
.BI \-oversize " cols" x rows
Makes the screen larger than the default for the chosen model number.
This option has effect only in combination with extended data stream support
(the
.B \-E
suffix on the model), and only if the host supports the Query Reply structured
field.
The number of columns multiplied by the number of rows must not exceed
16383 (3fff hex), the limit of 14-bit 3270 buffer addressing.
.TP
.BI \-port " n"
Specifies a different
.SM TCP
port to connect to.
.I n
can be a name from
.B /etc/services
like
.BR telnet ,
or a number.
This option changes the default port number used for all connections.
(The positional parameter affects only the initial connection.)
.TP
.BI \-set " toggle"
Sets the initial value of
.I toggle
to
.B true.
The list of toggle names is under
.SM MENUS
below.
.TP
.BI \-tn " name"
Specifies the terminal name to be transmitted over the telnet connection.
The default name is
.BI IBM\- model_name,
for example,
.BR IBM\-3279\-4\-E .
.IP
Some hosts are confused by the
.B \-E
suffix on the terminal name, and will ignore the extra screen area on
models 3, 4 and 5.
Prepending an
.B :s
on the hostname removes the
.B \-E
from the terminal name when connecting to such hosts.
.SH "CHARACTER SETS"
The
.B \-charset
option controls the
.SM EBCDIC
national character set used by
.B s3270.
Available sets include:
.PP
.TS
center;
l c
lfB c.
Charset Name	Q121 Code
_
bracket	\-
us-intl	01
german	03
finnish	09
uk	22
norwegian	23
french	30
hebrew	\-
icelandic	\-
belgian	\-
.TE
.PP
The default character set is
.BR bracket ,
which is useful for common
.SM IBM
hosts which use
.SM EBCDIC
codes 0xAD and 0xBD for the `[' and `]' characters, respectively.
.SH "ANSI MODE"
Some hosts use an
.SM ASCII
front-end to do initial login negotiation, then later switch to 3270 mode.
.B s3270
will emulate an
.SM ANSI
X.64 terminal until the host places it in 3270 mode (telnet
.SM BINARY
and
.SM "SEND EOR"
modes).
This allows
.B s3270
to be used to script standard TELNET sessions as well.
.PP
If the host later negotiates to stop functioning in 3270 mode,
.B s3270
will return to
.SM ANSI
emulation.
.PP
When emulating an
.SM ANSI
terminal,
.B s3270
supports both character-at-a-time mode and line mode operation.
You may select the mode with a menu option.
When in line mode, the special characters and operational characteristics are
defined as follows:
.PP
.TS
center;
l c.
Mode/Character	Setting
_
Translate CR to NL	true
Translate NL to CR	false
Erase previous character	^?
Erase entire line	^U
Erase previous word	^W
Redisplay line	^R
Ignore special meaning of next character	^V
Interrupt	^C
Quit	^\\\\ 
End of file	^D
.TE
.SH TOGGLES
.B s3270
has a number of configurable modes which may be selected by the -set and -clear options.
.TP
.B Monocase
If set,
.B s3270
operates in uppercase-only mode.
.TP
.B Blank Fill
If set,
.B s3270
behaves in some un-3270-like ways.
First, when a character is typed into a field, all nulls in the field to the
left of that character are changed to blanks.
This eliminates a common 3270 data-entry surprise.
Second, in insert mode, trailing blanks in a field are treated like nulls,
eliminating the annoying ``lock-up'' that often occurs when inserting into an
field with (apparent) space at the end.
.TP
.B Wraparound
If set, the
.SM ANSI
terminal emulator automatically assumes a
.SM NEWLINE
character when it reaches the end of a line.
.PP
The names of the toggles for use with the
.B -set
and
.B -clear
options are as follows:
.LP
.TS
center;
l l .
Menu Option	Name
_
Monocase	monoCase
Blank Fill	blankFill
Wraparound	lineWrap
.TE
.SH ACTIONS
.B s3270
supports the following basic actions:
.PP
.RS
.TS
l l
.
Attn	attention key
BackSpace	move cursor left (or send ASCII BS)
BackTab	tab to start of previous input field
CircumNot	input "^" in ANSI mode, or "notsign" in 3270 mode
Clear	clear screen
CursorSelect	Cursor Select AID
Cut	erase selected text
Delete	delete character under cursor (or send ASCII DEL)
DeleteField	delete the entire field
DeleteWord	delete the current or previous word
Down	move cursor down
Dup	duplicate field
Enter	Enter AID (or send ASCII CR)
Erase	erase previous character (or send ASCII BS)
EraseEOF	erase to end of current field
EraseInput	erase all input fields
Execute(\fIcmd\fP)	execute a command in a shell
FieldEnd	move cursor to end of field
FieldExit	clear to end of field and skip to next (5250 emulation)
FieldMark	mark field
HexString(\fIhex_digits\fP)	insert control-character string
Home	move cursor to first input field
Insert	set insert mode
Key(\fIkeysym\fP)	insert key \fIkeysym\fP
Left	move cursor left
Left2	move cursor left 2 positions
MoveCursor	move cursor to mouse position
MonoCase	toggle uppercase-only mode
Newline	move cursor to first field on next line (or send ASCII LF)
NextWord	move cursor to next word
PA(\fIn\fP)	Program Attention AID (\fIn\fP from 1 to 3)
PF(\fIn\fP)	Program Function AID (\fIn\fP from 1 to 24)
PreviousWord	move cursor to previous word
Quit	exit \fBs3270\fP
Reset	reset locked keyboard
Right	move cursor right
Right2	move cursor right 2 positions
Script(\fIcommand\fP[,\fIarg\fP...])	run a script
String(\fIstring\fP)	insert string (simple macro facility)
SysReq	System Request AID
Tab	move cursor to next input field
ToggleInsert	toggle insert mode
Up	move cursor up
.TE
.RE
.SH "SCRIPTS"
There are several types of scripting functions available.
.TP
.B The String() Action
The simplest method for macros is provided via the String action, which can
be bound to any key in a keymap.
The arguments to String() are one or more double-quoted strings which are
inserted directly as if typed.
The C backslash conventions are honored as follows.
(Entries marked * mean that after sending the
.SM AID
code to the host,
.B s3270
will wait for the host to unlock the keyboard before further processing the
string.)
.RS 1i
.TS
l l.
\eb	Left
\ef	Clear*
\en	Enter*
\e\epa\fIn\fP	PA key \fIn\fP*
\e\epf\fInn\fP	PF key \fInn\fP*
\er	Newline
\et	Tab
.TE
.RE
.IP
An example action would be:
.RS 1i
Meta<Key>p: String("probs clearrdr\en")
.RE
.IP
.B Note:
The strings are in
.SM ASCII
and converted to
.SM EBCDIC,
so beware of inserting
control codes.
Also, a backslash before a
.B p
must be doubled so it will not be removed when resource files are read.
.IP
There is also an alternate form of the String action, HexString, which is
used to enter non-printing data.
The argument to HexString is a string of hexadecimal digits, two per
character.  A leading 0x or 0X is optional.
In 3270 mode, the hexadecimal data represent EBCDIC characters, which are
entered into the current field.
In ANSI mode, the hexadecimal data represent ASCII characters, which are sent
directly to the host.
.TP
The Script() Action
This facility causes
.B s3270
to start a child process which can execute
.B s3270
actions.
The child process' standard input and output are piped back to
.BR s3270 .
The
.B Script()
action is fully documented in
.IR x3270-script (1).
.SH "APL SUPPORT"
.B s3270
supports the full
.SM APL2
character set and the entry of
.SM APL
characters with the Key() action.
.PP
The complete list of special
.SM APL
keysyms is as follows.  Entries marked with an asterisk (*) represent
simple aliases for standard \s-1EBCDIC\s+1 characters.
.PP
.RS
.TS
l c l.
\s-1APL\s+1 Symbol	Hex	s3270 Keysym
_
A underbar	41	apl_Aunderbar
alpha	B0	apl_alpha
B underbar	42	apl_Bunderbar
bar	60*	apl_bar
C underbar	43	apl_Cunderbar
circle	9D	apl_circle
circle bar	ED	apl_circlebar
circle slope	CF	apl_circleslope
circle star	FD	apl_circlestar
circle stile	CD	apl_circlestile
colon	7A*	apl_colon
comma	6B*	apl_comma
D underbar	44	apl_Dunderbar
del	BA	apl_del
del stile	DC	apl_delstile
del tilde	FB	apl_deltilde
delta	BB	apl_delta
delta stile	DD	apl_deltastile
delta underbar	FC	apl_deltaunderbar
diamond	70	apl_diamond
dieresis	72	apl_dieresis
dieresis dot	EC	apl_dieresisdot
divide	B8	apl_divide
dot	4B*	apl_dot
down arrow	8B	apl_downarrow
down caret	78	apl_downcaret
down caret tilde	CB	apl_downcarettilde
down shoe	AB	apl_downshoe
down stile	8E	apl_downstile
down tack	AC	apl_downtack
down tack jot	FE	apl_downtackjot
down tack up tack	DA	apl_downtackuptack
E underbar	45	apl_Eunderbar
epsilon	B1	apl_epsilon
epsilon underbar	75	apl_epsilonunderbar
equal	7E*	apl_equal
equal underbar	E1	apl_equalunderbar
F underbar	46	apl_Funderbar
G underbar	47	apl_Gunderbar
greater	6E*	apl_greater
H underbar	48	apl_Hunderbar
I underbar	49	apl_Iunderbar
iota	B2	apl_iota
iota underbar	74	apl_iotaunderbar
J underbar	51	apl_Junderbar
jot	AF	apl_jot
K underbar	52	apl_Kunderbar
L underbar	53	apl_Lunderbar
left arrow	9F	apl_leftarrow
left bracket	AD	apl_leftbracket
left paren	4D*	apl_leftparen
left shoe	9B	apl_leftshoe
less	4C*	apl_less
M underbar	54	apl_Munderbar
N underbar	55	apl_Nunderbar
not equal	BE	apl_notequal
not greater	8C	apl_notgreater
not less	AE	apl_notless
O underbar	56	apl_Ounderbar
omega	B4	apl_omega
overbar	A0	apl_overbar
P underbar	57	apl_Punderbar
plus	4E*	apl_plus
Q underbar	58	apl_Qunderbar
quad	90	apl_quad
quad divide	EE	apl_quaddivide
quad jot	73	apl_quadjot
quad quote	DE	apl_quadquote
quad slope	CE	apl_quadslope
query	6F*	apl_query
quote	7D*	apl_quote
quote dot	DB	apl_quotedot
R underbar	59	apl_Runderbar
rho	B3	apl_rho
right arrow	8F	apl_rightarrow
right bracket	BD	apl_rightbracket
right paren	5D*	apl_rightparen
right shoe	9A	apl_rightshoe
S underbar	62	apl_Sunderbar
semicolon	5E*	apl_semicolon
slash	61*	apl_slash
slash bar	EA	apl_slashbar
slope	B7	apl_slope
slope bar	EB	apl_slopebar
squad	CC	apl_squad
star	5C*	apl_star
stile	BF	apl_stile
T underbar	63	apl_Tunderbar
tilde	80	apl_tilde
times	B6	apl_times
U underbar	64	apl_Uunderbar
underbar	6D*	apl_underbar
up arrow	8A	apl_uparrow
up caret	71	apl_upcaret
up caret tilde	CA	apl_upcarettilde
up shoe	AA	apl_upshoe
up shoe jot	DF	apl_upshoejot
up stile	8D	apl_upstile
up tack	BC	apl_uptack
up tack jot	EF	apl_uptackjot
V underbar	65	apl_Vunderbar
W underbar	66	apl_Wunderbar
X underbar	67	apl_Xunderbar
Y underbar	68	apl_Yunderbar
Z underbar	69	apl_Zunderbar
.TE
.RE
.SH PASSTHRU
.B s3270
supports the Sun
.I telnet-passthru
service provided by the
.I in.telnet-gw
server.
This allows outbound telnet connections through a firewall machine.
When a
.B p:
is prepended to a hostname,
.B s3270
acts much like the
.IR itelnet(1)
command.
It contacts the machine named
.B internet-gateway
at the port defined in
.B /etc/services
as
.B telnet-passthru
(which defaults to 3514).
It then passes the requested hostname and port to the
.B in.telnet-gw
server.
.SH "SEE ALSO"
telnet(1), tn3270(1), ibm_hosts(5), x3270(1), x3270-script(1)
.br
X Toolkit Intrinsics
.br
Data Stream Programmer's Reference, IBM GA23\-0059
.br
Character Set Reference, IBM GA27\-3831
.br
RFC 1576, TN3270 Current Practices
.br
RFC 1646, TN3270 Extensions for LUname and Printer Selection
.SH COPYRIGHTS
.LP
Modifications Copyright 1993, 1994, 1995, 1996, 1997, 1999 by Paul Mattes.
.br
Original X11 Port Copyright 1990 by Jeff Sparkes.
.RS
Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation.
.RE
Copyright 1989 by Georgia Tech Research Corporation, Atlanta, GA 30332.
.RS
All Rights Reserved.  GTRC hereby grants public use of this software.
Derivative works based on this software must incorporate this copyright
notice.
.RE
5250 Emulation Code copyright Minolta (Schweiz) AG, Beat Rubischon.
.SH VERSION
s3270 3.2A1
