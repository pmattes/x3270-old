For 3.0.3.8 (definite)

  Make the new release 3.0.4.0.  It's too different from 3.0.3.7.

  Clean up font conversions:
    3270h -- are Hebrew characters GEd, perchance?

  Write up the changes from 3.0.3.7.  There are lots of them.  Need to go
   through the whole docs set.

  Support brackets and APL characters via real GEs. (tester: =john.kilheffer)
   Done!

For 3.0.3.8 (iffy)

  Hyperhelp with the .html files installed in /usr/lib/X11/x3270.  Need to
   move README.html to the Docs directory.

  SNAP/FREE/CYCLE keys. (=swiftga)

  Implement a printer selection menu. (=hes)

  Allow keymaps to be chosen from a menu. (=hes)

  Allow anything to be changed at runtime (charset, keymap, ...).  (=dick)

  Set up a resource to control default ANSI text color. (=dick)
   This can now be done indirectly by changing the 3270 color index used for
   protected text.

Later

  Look into alternate forms of Wait --
    Wait(connected)	wait until connected (present behavior)
    Wait(ANSI)		wait for ANSI mode
    Wait(3270)		wait for 3270 mode
  I think an overhaul of macro/script pend logic is in order.

  Implement TN3270E.

  Implement a graphical, friendly keymap definition interface. (=hes)

  Look into Martin Burri's keymap. (=burrim)

  Create a Motif version.  (=slarsen)

  Multilingual error messages. (=benoit.leclerc)

  Get perham back up and compile 3.0.3.5 (=kaiser)

  Decode rjcronin's traces. (=rjcronin)
    Largely done now.

  Fix MoveCursor bug #321 (=rayl).
    For some reason the event is coming in against the container widget
    rather than the screen widget.
    It only happens when there is a conflict between a menu handler
     definition and a user keymap definition (Ctrl).  Alt and Meta work
     just fine, but break if the menu definition is changed to match.
    Sent Ray a workaround or two.  Maybe they'll do.

  Survey OW 3.3's k5 keysyms (=dreed).  Climax?

  Figure out Sean Boran's abending application and incorrectly unlocked
   keyboard.

Later Still

  Look into drifting windows with certain window managers.  (=jtonsing)
  Look into compiler warning with short fileno().  (=jtonsing)

  Macro reader and playback without resources.

  User-defined menu items.

  See about Openwindows-compatible Copy.  (=raper)
   - look at "xclipboard"... it's a way to display the current clipboard
   - wrote an application to display various selections, and it told me that
      OpenWindows applications save and re-read /tmp/ttyselection for
      CLIPBOARD, and save (but don't re-read) /tmp/winselection for PRIMARY.
      The COPY button seems to re-read /tmp/ttyselection and copy it to
      CLIPBOARD.  No, it doesn't...
   - The COPY key is causing some kind of interaction with the server,
     which pops out to the process that owns the clipboard.  If I use
     xclipboard instead of shelltool, it takes 2 tries to set CLIPBOARD;
     the first time... ?, the second time it tries to convert the selection to
     type _SUN_SELN_YIELD.  The Copy'ing client is doing an XGetSelectionOwner
     and then querying properties of the owner...
     The OpenWindows version of xclipboard doesn't participate in this
     nonsense, either.
   - What happens when you press Copy in a SunView window that doesn't own
     PRIMARY is that it sends a selection request to the owner:
	selection	1	PRIMARY
	target		221	_SUN_SELN_DO_FUNCTION
	property	266	SELECTION_PROPERTY32
   - Xt automagically answers this for the application, so user code can't
     see it.
   - When pasting from an xterm, the event that comes through is:
	selection	1	PRIMARY
	target		31	STRING
	property	109	_XT_SELECTION_0
   - Anyway, we should be able to implement a Copy key:
	SunCopy(property_from,property_to,target)
	e.g., SunCopy(PRIMARY,CLIPBOARD,_SUN_SELN_DO_FUNCTION)

  Allow multi-page paste. (=soren)

  Always position the keypad _on_ the screen. (=pc)

  See about #ifdef'ing out some uncommon features.  (=pc)
   Starting on a "crack" utility to move the TELNET and data stream traces
   out to a separate program.  That's easily the biggest piece right now.
   Not such a good idea.  'Crack' would have to be almost a complete emulator
   itself, and would need to be configured as subtly as x3270 itself.

  See if I can get mwm "maximize" to work.  (=savild)
   Perhaps I can specify a "maximum" window size...

  Allow screen-at-a-time scrolling to be configurable. (=nicolc)
   This would require that scrolling preserve the screen image, rather
   than the 3270 screen_buf and ea_buf, so 3270 field-wrapping wouldn't
   cause bizarre problems.  This might be some serious surgery.

  Automatically add the emulatorFont to resizeFontList.  (=savild)
   What about any new font that is selected, so you can "return" to it
   by resizing.  Hmm... maybe should just add a note to the documentation?
   Maybe should just add the "previous" font to the list when resizing?
   Maybe...

  Add pty support and arbitrary resizing in ANSI mode. (=dick)

  Add vt220 double-wide characters. (=dick)

  Do background color.  (pdm)

  Look into resizing the keyboard with the screen.  (=boehmer)
